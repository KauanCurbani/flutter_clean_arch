// Mocks generated by Mockito 5.4.4 from annotations
// in delivery_flutter/test/presentation/pages/presenters/customerDetailPage/getx_customer_detail_page_presenter_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:delivery_flutter/core/customers/customer.dart' as _i5;
import 'package:delivery_flutter/core/customers/customer_details.dart' as _i2;
import 'package:delivery_flutter/core/customers/customer_use_case.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCustomerDetail_0 extends _i1.SmartFake
    implements _i2.CustomerDetail {
  _FakeCustomerDetail_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CustomerUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCustomerUseCase extends _i1.Mock implements _i3.CustomerUseCase {
  MockCustomerUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i5.Customer>> getCustomers(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCustomers,
          [query],
        ),
        returnValue: _i4.Future<List<_i5.Customer>>.value(<_i5.Customer>[]),
      ) as _i4.Future<List<_i5.Customer>>);

  @override
  _i4.Future<_i2.CustomerDetail> getCustomerDetail(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCustomerDetail,
          [id],
        ),
        returnValue: _i4.Future<_i2.CustomerDetail>.value(_FakeCustomerDetail_0(
          this,
          Invocation.method(
            #getCustomerDetail,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.CustomerDetail>);
}

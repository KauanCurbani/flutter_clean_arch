// Mocks generated by Mockito 5.4.4 from annotations
// in delivery_flutter/test/ui/pages/homepage/homepage_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:delivery_flutter/core/customers/customer.dart' as _i4;
import 'package:delivery_flutter/ui/pages/homepage/homepage_presenter.dart'
    as _i3;
import 'package:get/get.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRxBool_0 extends _i1.SmartFake implements _i2.RxBool {
  _FakeRxBool_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxList_1<E> extends _i1.SmartFake implements _i2.RxList<E> {
  _FakeRxList_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomepagePresenter].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomepagePresenter extends _i1.Mock implements _i3.HomepagePresenter {
  MockHomepagePresenter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.RxBool get loading => (super.noSuchMethod(
        Invocation.getter(#loading),
        returnValue: _FakeRxBool_0(
          this,
          Invocation.getter(#loading),
        ),
      ) as _i2.RxBool);

  @override
  _i2.RxList<_i4.Customer> get customers => (super.noSuchMethod(
        Invocation.getter(#customers),
        returnValue: _FakeRxList_1<_i4.Customer>(
          this,
          Invocation.getter(#customers),
        ),
      ) as _i2.RxList<_i4.Customer>);

  @override
  _i5.Future<void> loadData() => (super.noSuchMethod(
        Invocation.method(
          #loadData,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> search(String? query) => (super.noSuchMethod(
        Invocation.method(
          #search,
          [query],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> onTapCustomer(_i4.Customer? customer) => (super.noSuchMethod(
        Invocation.method(
          #onTapCustomer,
          [customer],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
